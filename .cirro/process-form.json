{
  "ui": {},
  "form": {
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/differentialabundance/master/nextflow_schema.json",
    "title": "nf-core/differentialabundance pipeline parameters",
    "description": "Differential abundance analysis",
    "type": "object",
    "properties": {
      "input_output_options": {
        "title": "Input/output options",
        "type": "object",
        "fa_icon": "fas fa-terminal",
        "description": "Define where the pipeline should find input data and save output data.",
        "required": [
          "variable",
          "reference",
          "target"
        ],
        "properties": {
          "variable": {
            "type": "string",
            "description": "Column name to use for contrasts",
            "default": "condition"
          },
          "reference": {
            "type": "string",
            "description": "Reference for contrasts",
            "default": "S4"
          },
          "target": {
            "type": "string",
            "description": "Target for contrasts",
            "default": "S5"
          }
        }
      },
      "reference_genome_options": {
        "title": "Reference genome options",
        "type": "object",
        "fa_icon": "fas fa-dna",
        "description": "Reference genome related files and options required for the workflow.",
        "properties": {
            "gtf": {
                "type": "string",
                "pathType": "references",
                "file": "**/hg38*/*.gtf",
                "description": "Genome annotation file in GTF format",
                "pattern": "^\\S+\\.gtf(\\.gz)?",
                "format": "file-path",
                "exists": true,
                "mimetype": "text/plain",
                "help_text": "\"This parameter is *mandatory* if `--genome` is not specified.\"",
                "fa_icon": "fas fa-book"
            }
        }
      },
      "abundance_values": {
        "title": "Abundance values",
        "type": "object",
        "description": "Ways of providing your abundance values",
        "default": "",
        "properties": {
          "matrix": {
            "pathType": "dataset",
            "file": "**/star_salmon/salmon.merged.gene_counts.tsv",
            "type": "string",
            "description": "TSV-format abundance matrix",
            "help_text": "For example an expression matrix output from the nf-core/rnaseq workflow. There must be a column in this matrix for every row in the input sample sheet.\n\nNot a required input if providing CEL files for affymetrix preprocessing.",
            "format": "file-path",
            "mimetype": "text/tab-separated-values",
            "pattern": "^\\S+\\.(tsv|csv|txt)$",
            "fa_icon": "fas fa-border-all"
          },
          "transcript_length_matrix": {
            "pathType": "dataset",
            "file": "**/star_salmon/salmon.merged.gene_lengths.tsv",
            "type": "string",
            "fa_icon": "fas fa-border-all",
            "description": "(RNA-seq only): optional transcript length matrix with samples and genes as the abundance matrix",
            "help_text": "If provided, this file willl be used to provide transcript lengths to DESeq2 to model length bias across samples"
          }
        }
      },
      "shiny_app_settings": {
        "title": "Shiny app settings",
        "type": "object",
        "description": "",
        "default": "",
        "properties": {
          "shinyngs_build_app": {
            "type": "boolean",
            "default": true,
            "description": "Should a Shiny app be built?",
            "help_text": "At a minimum this will trigger generation of files you can quickly use to spin up a shiny app locally. But you can also use the 'shinyapps' settings to deploy an app straight to shinyapps.io.",
            "fa_icon": "fas fa-wrench"
          }
        },
        "fa_icon": "fab fa-app-store-ios"
      }
    }
  }
}
